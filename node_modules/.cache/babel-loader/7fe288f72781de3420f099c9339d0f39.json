{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Music\\\\mintic-cilo3\\\\src\\\\components\\\\ListadoProductos\\\\ListadoProductos.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './ListadoProductos.css';\nimport { Table, Button, Container } from \"reactstrap\";\nimport ModalCrearProducto from '../ModalCrearProducto/ModalCrearProducto';\nimport ModalEditarProducto from '../ModalEditarProducto/ModalEditarProducto'; ////////////////////////////// DATOS DE PRUEBA\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = [{\n  id: 1,\n  descripcion: \"Producto 1\",\n  valor: \"1000\",\n  estado: \"Disponible\"\n}, {\n  id: 2,\n  descripcion: \"Producto 2\",\n  valor: \"2000\",\n  estado: \"Disponible\"\n}, {\n  id: 3,\n  descripcion: \"Producto 3\",\n  valor: \"3000\",\n  estado: \"No Disponible\"\n}, {\n  id: 4,\n  descripcion: \"Producto 4\",\n  valor: \"4000\",\n  estado: \"Disponible\"\n}, {\n  id: 5,\n  descripcion: \"Producto 5\",\n  valor: \"5000\",\n  estado: \"Disponible\"\n}];\n\nconst ListadoProductos = () => {\n  _s();\n\n  const [modalActualizar, setModalActualizar] = React.useState(false);\n  const [modalInsertar, setModalInsertar] = React.useState(false);\n  const [usuario, setUsuario] = React.useState({\n    data: data,\n    form: {\n      id: \"\",\n      descripcion: \"\",\n      valor: \"\",\n      estado: \"\"\n    }\n  });\n  let arregloUsuarios = usuario.data;\n\n  const handleChange = datosImput => {\n    setUsuario(prevState => ({ ...prevState,\n      form: { ...prevState.form,\n        [datosImput.target.name]: datosImput.target.value\n      }\n    }));\n  };\n\n  const mostrarModalActualizar = datoId => {\n    let userToModify;\n    arregloUsuarios.map(registro => {\n      if (parseInt(datoId.target.id) === registro.id) {\n        userToModify = registro;\n      }\n\n      return console.log(\"Mostro Modal Actualizar\");\n    }); // listarUsuarios(userToModify);\n\n    setUsuario({ ...usuario,\n      form: userToModify\n    });\n    setModalActualizar(true);\n  };\n\n  const mostrarModalInsertar = () => {\n    setModalInsertar(true);\n    return console.log(\"Mostro Modal Actualizar\");\n  };\n\n  const eliminar = datoID => {\n    let contador = 0; //let arregloUsuarios = usuario.data;\n\n    arregloUsuarios.map(registro => {\n      if (parseInt(datoID.target.id) === registro.id) {\n        let opcion = window.confirm(\"¿Está seguro que desea eliminar el producto \" + registro.descripcion + \"?\");\n\n        if (opcion) {\n          arregloUsuarios.splice(contador, 1);\n        }\n      }\n\n      contador++;\n      return console.log(\"Elimino Correctamente\");\n    });\n    listarUsuarios(arregloUsuarios);\n  };\n\n  const listarUsuarios = datos => {\n    setUsuario({ ...usuario,\n      data: datos\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"titulos\",\n        children: \"Listado Productos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: mostrarModalInsertar,\n        children: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lista\",\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"encabezados\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Descripci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Valor Unitario\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acci\\xF3n\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: usuario.data.map(dato => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: dato.descripcion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dato.valor\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dato.estado\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"primary\",\n                  id: dato.id,\n                  onClick: mostrarModalActualizar,\n                  children: \"Editar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n                  id: dato.id,\n                  color: \"danger\",\n                  onClick: eliminar,\n                  children: \"Eliminar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, dato.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ModalCrearProducto, {\n          usuario: usuario,\n          arregloUsuarios: arregloUsuarios,\n          listarUsuarios: listarUsuarios,\n          handleChange: handleChange,\n          setModalInsertar: setModalInsertar,\n          isOpen: modalInsertar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalEditarProducto, {\n          usuario: usuario,\n          arregloUsuarios: arregloUsuarios,\n          listarUsuarios: listarUsuarios,\n          handleChange: handleChange,\n          setModalActualizar: setModalActualizar,\n          isOpen: modalActualizar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ListadoProductos, \"tDF1wgFvYD/XibW4NzMsDAl6eX0=\");\n\n_c = ListadoProductos;\nexport default ListadoProductos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListadoProductos\");","map":{"version":3,"sources":["C:/Users/jeiso/Music/mintic-cilo3/src/components/ListadoProductos/ListadoProductos.js"],"names":["React","Table","Button","Container","ModalCrearProducto","ModalEditarProducto","data","id","descripcion","valor","estado","ListadoProductos","modalActualizar","setModalActualizar","useState","modalInsertar","setModalInsertar","usuario","setUsuario","form","arregloUsuarios","handleChange","datosImput","prevState","target","name","value","mostrarModalActualizar","datoId","userToModify","map","registro","parseInt","console","log","mostrarModalInsertar","eliminar","datoID","contador","opcion","window","confirm","splice","listarUsuarios","datos","dato"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './ListadoProductos.css';\nimport {\n  Table,\n  Button,\n  Container,\n\n} from \"reactstrap\";\nimport ModalCrearProducto from '../ModalCrearProducto/ModalCrearProducto';\nimport ModalEditarProducto from '../ModalEditarProducto/ModalEditarProducto';\n\n////////////////////////////// DATOS DE PRUEBA\nconst data = [\n  { id: 1, descripcion: \"Producto 1\", valor: \"1000\", estado: \"Disponible\"},\n  { id: 2, descripcion: \"Producto 2\", valor: \"2000\", estado: \"Disponible\" },\n  { id: 3, descripcion: \"Producto 3\", valor: \"3000\", estado: \"No Disponible\" },\n  { id: 4, descripcion: \"Producto 4\", valor: \"4000\", estado: \"Disponible\"},\n  { id: 5, descripcion: \"Producto 5\", valor: \"5000\", estado: \"Disponible\" }\n];\n\n\nconst ListadoProductos = () => {\n  const [modalActualizar, setModalActualizar] = React.useState(false);\n  const [modalInsertar, setModalInsertar] = React.useState(false);\n  const [usuario, setUsuario] = React.useState({\n    data: data,\n    form: {\n      id: \"\",\n      descripcion: \"\",\n      valor: \"\",\n      estado: \"\"\n    }\n  });\n  let arregloUsuarios = usuario.data;\n\n  const handleChange = (datosImput) => {\n    setUsuario((prevState) => ({\n      ...prevState,\n      form: {\n        ...prevState.form,\n        [datosImput.target.name]: datosImput.target.value,\n      }\n    }));\n  };\n  const mostrarModalActualizar = (datoId) => {\n    let userToModify;\n    arregloUsuarios.map((registro) => {\n      if ( parseInt(datoId.target.id) === registro.id) {\n        userToModify = registro;\n        }\n        return console.log(\"Mostro Modal Actualizar\");\n    });\n    // listarUsuarios(userToModify);\n     setUsuario({\n       ...usuario,\n     form: userToModify\n     });\n    setModalActualizar(true);\n  };\n  const mostrarModalInsertar = () => {\n    setModalInsertar(true);\n    return console.log(\"Mostro Modal Actualizar\");\n  };\n  const eliminar = (datoID) => {\n    let contador = 0;\n    //let arregloUsuarios = usuario.data;\n    arregloUsuarios.map((registro) => {\n      if ( parseInt(datoID.target.id) === registro.id) {\n        let opcion = window.confirm(\"¿Está seguro que desea eliminar el producto \" + registro.descripcion + \"?\");\n        if (opcion) {\n          arregloUsuarios.splice(contador, 1);\n        }\n      }\n      contador++;\n      return console.log(\"Elimino Correctamente\");\n    });\nlistarUsuarios(arregloUsuarios);\n  };\nconst listarUsuarios= (datos) =>{\n    setUsuario({\n      ...usuario,\n      data: datos\n    });\n  }\n\n  return (\n    < >\n      <Container>\n        <h1 className=\"titulos\">Listado Productos</h1>\n        <br />\n        <Button color=\"success\" onClick={mostrarModalInsertar}>Crear</Button>\n        <br />\n        <br />\n        <div id=\"lista\">\n        <Table >\n          <thead className=\"encabezados\">\n            <tr>\n              <th>Descripción</th>\n              <th>Valor Unitario</th>\n              <th>Estado</th>\n              <th>Acción</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {usuario.data.map((dato) => (\n              <tr key={dato.id}>\n                <td>{dato.descripcion}</td>\n                <td>{dato.valor}</td>\n                <td>{dato.estado}</td>\n                <td>\n                  <Button\n                    color=\"primary\" id={dato.id}\n                    onClick={mostrarModalActualizar}\n                  >\n                    Editar\n                  </Button>{\" \"}\n                  <Button id={dato.id} color=\"danger\" onClick={eliminar}>Eliminar</Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n          <ModalCrearProducto \n                    usuario={usuario}\n                    arregloUsuarios={arregloUsuarios}\n                    listarUsuarios={listarUsuarios} \n                    handleChange={handleChange}\n                    setModalInsertar={setModalInsertar}\n                    isOpen={modalInsertar}\n          />\n          <ModalEditarProducto \n                    usuario={usuario}\n                    arregloUsuarios={arregloUsuarios}\n                    listarUsuarios={listarUsuarios} \n                    handleChange={handleChange}\n                    setModalActualizar={setModalActualizar}\n                    isOpen={modalActualizar}\n          />\n        </div>\n      </Container>\n\n    </>\n  );\n            }\n\n\nexport default ListadoProductos;\n"]},"metadata":{},"sourceType":"module"}