{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeiso\\\\Music\\\\mintic-cilo3\\\\src\\\\components\\\\VistaVentas\\\\VistaVenta.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './VistaVenta.css';\nimport { Table, Button, Container } from \"reactstrap\";\nimport ModalCrear from '../ModalCrearVenta/ModalCrear';\nimport ModalEditar from '../ModalEditarVenta/ModalEditar'; ////////////////////////////// DATOS DE PRUEBA\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = [{\n  _id: 1,\n  IdProducto: 'cafe',\n  cantidad: 3,\n  precioUnitario: 10000,\n  valorTotal: 10000,\n  fechaVenta: \"2021-10-20\",\n  cedulaCliente: 11111,\n  nombreCliente: \"pablo\",\n  estado: \"en proceso\",\n  cedulaCliente: 11221222,\n  nombreCliente: \"pepito\",\n  IdVendedor: \"samir\"\n} //{ id: 2, IdProducto: 'cacao', cantidad: 3,precioUnitario:10000, valorTotal:10000,  fechaVenta: \"2021-10-20\", cedulaCliente:11111,nombreCliente: \"pablo\", estado: \"en proceso\", cedulaCliente:11221222, nombreCliente:\"pepito\", IdVendedor:\"samir\"},\n//{ id: 3, IdProducto: 'azucar', cantidad: 3,precioUnitario:10000, valorTotal:10000,  fechaVenta: \"2021-10-20\", cedulaCliente:11111,nombreCliente: \"pablo\", estado: \"en proceso\", cedulaCliente:11221222, nombreCliente:\"pepito\", IdVendedor:\"samir\"},\n//{ id: 5, IdProducto: 'caña', cantidad: 3,precioUnitario:10000, valorTotal:10000,  fechaVenta:\"2021-10-20\", cedulaCliente:11111,nombreCliente: \"pablo\", estado: \"en proceso\", cedulaCliente:11221222, nombreCliente:\"pepito\", IdVendedor:\"samir\"}\n];\nconst IdVendedor = \"Jeison\";\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst PATH_CUSTOMERS = process.env.REACT_APP_API_CUSTOMERS_VENTAS_PATH;\n\nconst VistaVenta = () => {\n  _s();\n\n  const [modalActualizar, setModalActualizar] = React.useState(false);\n  const [modalInsertar, setModalInsertar] = React.useState(false);\n  const [newVal, setNewVal] = React.useState(0);\n  const [venta, setVenta] = React.useState({\n    data: data,\n    form: {\n      //id: \"\",\n      _id: \"\",\n      IdProducto: \"\",\n      cantidad: \"\",\n      precioUnitario: \"\",\n      valorTotal: \"\",\n      fechaVenta: \"\"\n    }\n  });\n  let arregloVentas = venta.data;\n\n  const handleChange = datosImput => {\n    console.log(\"ejecute handle\");\n    console.log(datosImput);\n    console.log(\"fin handle\");\n    setVenta(prevState => ({ ...prevState,\n      form: { ...prevState.form,\n        [datosImput.target.name]: datosImput.target.value\n      }\n    }));\n  };\n\n  React.useEffect(() => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`${BASE_URL}${PATH_CUSTOMERS}`, requestOptions).then(res => res.json()).then(result => {\n      //setIsLoaded(true);\n      setVenta({ ...venta,\n        data: result\n      });\n    }, error => {//setIsLoaded(true);\n      //setErrors(error);\n    });\n  }, [newVal]);\n\n  const mostrarModalActualizar = datoId => {\n    let saleToModify;\n    arregloVentas.map(registro => {\n      if (parseInt(datoId.target.id) === registro.id) {\n        saleToModify = registro;\n      }\n\n      return console.log(\"Mostro Modal Actualizar\");\n    }); // listarVentas(saleToModify);\n\n    setVenta({ ...venta,\n      form: saleToModify\n    });\n    setModalActualizar(true);\n  };\n\n  const mostrarModalInsertar = () => {\n    setModalInsertar(true);\n    return console.log(\"Mostro Modal Actualizar\");\n  };\n\n  const eliminar = e => {\n    arregloVentas.map(registro => {\n      if (e.target.id === registro._id) {\n        let opcion = window.confirm(\"¿Está seguro que desea eliminar el valor \" + registro.firstName + \"?\");\n\n        if (opcion) {\n          borrarCustomer(registro._id);\n        }\n      }\n\n      return console.log(\"Elimino Correctamente\");\n    });\n  };\n\n  const borrarCustomer = id => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`${BASE_URL}${PATH_CUSTOMERS}/${id}`, requestOptions).then(result => result.json()).then(result => {\n      setNewVal(newVal + 1);\n    }, error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"titulos\",\n        children: \"Registro de Ventas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        onClick: mostrarModalInsertar,\n        children: \"Registrar Nueva Venta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lista\",\n        children: [/*#__PURE__*/_jsxDEV(ModalCrear, {\n          IdVendedor: IdVendedor,\n          venta: venta,\n          handleChange: handleChange,\n          setModalInsertar: setModalInsertar,\n          isOpen: modalInsertar,\n          setNewVal: setNewVal,\n          newVal: newVal,\n          BASE_URL: BASE_URL,\n          PATH_CUSTOMERS: PATH_CUSTOMERS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalEditar, {\n          IdVendedor: IdVendedor,\n          venta: venta,\n          handleChange: handleChange,\n          setModalActualizar: setModalActualizar,\n          isOpen: modalActualizar,\n          setNewVal: setNewVal,\n          newVal: newVal,\n          BASE_URL: BASE_URL,\n          PATH_CUSTOMERS: PATH_CUSTOMERS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(VistaVenta, \"VFE7UU/+ZxyWqJTkOmyHFvtBYP8=\");\n\n_c = VistaVenta;\nexport default VistaVenta;\n\nvar _c;\n\n$RefreshReg$(_c, \"VistaVenta\");","map":{"version":3,"sources":["C:/Users/jeiso/Music/mintic-cilo3/src/components/VistaVentas/VistaVenta.js"],"names":["React","Table","Button","Container","ModalCrear","ModalEditar","data","_id","IdProducto","cantidad","precioUnitario","valorTotal","fechaVenta","cedulaCliente","nombreCliente","estado","IdVendedor","BASE_URL","process","env","REACT_APP_API_BASE_URL","PATH_CUSTOMERS","REACT_APP_API_CUSTOMERS_VENTAS_PATH","VistaVenta","modalActualizar","setModalActualizar","useState","modalInsertar","setModalInsertar","newVal","setNewVal","venta","setVenta","form","arregloVentas","handleChange","datosImput","console","log","prevState","target","name","value","useEffect","requestOptions","method","headers","fetch","then","res","json","result","error","mostrarModalActualizar","datoId","saleToModify","map","registro","parseInt","id","mostrarModalInsertar","eliminar","e","opcion","window","confirm","firstName","borrarCustomer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './VistaVenta.css';\nimport {\n  Table,\n  Button,\n  Container,\n\n} from \"reactstrap\";\nimport ModalCrear from '../ModalCrearVenta/ModalCrear';\nimport ModalEditar from '../ModalEditarVenta/ModalEditar';\n\n////////////////////////////// DATOS DE PRUEBA\nconst data = [\n { _id: 1, IdProducto: 'cafe', cantidad: 3,precioUnitario:10000, valorTotal:10000, fechaVenta: \"2021-10-20\", cedulaCliente:11111,nombreCliente: \"pablo\", estado: \"en proceso\" , cedulaCliente:11221222, nombreCliente:\"pepito\", IdVendedor:\"samir\"},\n  //{ id: 2, IdProducto: 'cacao', cantidad: 3,precioUnitario:10000, valorTotal:10000,  fechaVenta: \"2021-10-20\", cedulaCliente:11111,nombreCliente: \"pablo\", estado: \"en proceso\", cedulaCliente:11221222, nombreCliente:\"pepito\", IdVendedor:\"samir\"},\n  //{ id: 3, IdProducto: 'azucar', cantidad: 3,precioUnitario:10000, valorTotal:10000,  fechaVenta: \"2021-10-20\", cedulaCliente:11111,nombreCliente: \"pablo\", estado: \"en proceso\", cedulaCliente:11221222, nombreCliente:\"pepito\", IdVendedor:\"samir\"},\n  //{ id: 5, IdProducto: 'caña', cantidad: 3,precioUnitario:10000, valorTotal:10000,  fechaVenta:\"2021-10-20\", cedulaCliente:11111,nombreCliente: \"pablo\", estado: \"en proceso\", cedulaCliente:11221222, nombreCliente:\"pepito\", IdVendedor:\"samir\"}\n];\n\nconst IdVendedor = \"Jeison\";\nconst BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst PATH_CUSTOMERS = process.env.REACT_APP_API_CUSTOMERS_VENTAS_PATH;\n\n\nconst VistaVenta = () => {\n  const [modalActualizar, setModalActualizar] = React.useState(false);\n  const [modalInsertar, setModalInsertar] = React.useState(false);\n  const [newVal, setNewVal] = React.useState(0);\n  const [venta, setVenta] = React.useState({\n    data: data,\n    form: {\n      //id: \"\",\n      _id:\"\",\n      IdProducto: \"\",\n      cantidad: \"\",\n      precioUnitario: \"\",\n      valorTotal: \"\",\n      fechaVenta: \"\"\n    }\n  });\n  let arregloVentas = venta.data;\n\n  const handleChange = (datosImput) => {\n    console.log(\"ejecute handle\")\n    console.log(datosImput)\n    console.log(\"fin handle\")\n    setVenta((prevState) => ({\n      ...prevState,\n      form: {\n        ...prevState.form,\n        [datosImput.target.name]: datosImput.target.value,\n      }\n    }));\n  };\n\n  React.useEffect(() => {\n    const requestOptions = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    };\n    fetch(`${BASE_URL}${PATH_CUSTOMERS}`, requestOptions)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          //setIsLoaded(true);\n          setVenta({\n            ...venta,\n            data: result\n          });\n        },\n        (error) => {\n          //setIsLoaded(true);\n          //setErrors(error);\n        }\n      )\n  }, [newVal]);\n\n  const mostrarModalActualizar = (datoId) => {\n    let saleToModify;\n    arregloVentas.map((registro) => {\n      if ( parseInt(datoId.target.id) === registro.id) {\n        saleToModify = registro;\n        }\n        return console.log(\"Mostro Modal Actualizar\");\n    });\n    // listarVentas(saleToModify);\n     setVenta({\n       ...venta,\n     form: saleToModify\n     });\n    setModalActualizar(true);\n  };\n\n  const mostrarModalInsertar = () => {\n    setModalInsertar(true);\n    return console.log(\"Mostro Modal Actualizar\");\n  };\n  const eliminar = (e) => {\n    arregloVentas.map((registro) => {\n      if (e.target.id === registro._id) {\n        let opcion = window.confirm(\"¿Está seguro que desea eliminar el valor \" + registro.firstName + \"?\");\n        if (opcion) {\n          borrarCustomer(registro._id);\n        }\n      }\n      return console.log(\"Elimino Correctamente\");\n    });\n  }\n  const borrarCustomer  = (id) => {\n    const requestOptions = {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`${BASE_URL}${PATH_CUSTOMERS}/${id}`, requestOptions)\n      .then(result => result.json())\n      .then(\n        (result) => {\n         setNewVal(newVal + 1);\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n \n\n  return (\n    < >\n      <Container>\n        <h1 className=\"titulos\">Registro de Ventas</h1>\n        <br />\n        <Button  color=\"success\" onClick={mostrarModalInsertar}>Registrar Nueva Venta</Button>\n        <br />\n        <br />\n        <div id=\"lista\">\n        \n          <ModalCrear \n                    IdVendedor={IdVendedor}\n                    venta={venta}\n                    handleChange={handleChange}\n                    setModalInsertar={setModalInsertar}\n                    isOpen={modalInsertar}\n                    setNewVal={setNewVal}\n                    newVal={newVal}\n                    BASE_URL={BASE_URL}\n                    PATH_CUSTOMERS={PATH_CUSTOMERS}\n          />\n          <ModalEditar \n                    IdVendedor={IdVendedor}\n                    venta={venta}\n                    handleChange={handleChange}\n                    setModalActualizar={setModalActualizar}\n                    isOpen={modalActualizar}\n                    setNewVal={setNewVal}\n                    newVal={newVal}\n                    BASE_URL={BASE_URL}\n                    PATH_CUSTOMERS={PATH_CUSTOMERS}\n                    \n\n          />\n        </div>\n      </Container>\n\n    </>\n  );\n            }\n\n\nexport default VistaVenta;\n"]},"metadata":{},"sourceType":"module"}